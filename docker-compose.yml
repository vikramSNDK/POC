# version: '3.8'

# services:
#   mongo:
#     image: mongo:latest
#     container_name: mongo-db
#     # restart: always
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo_data:/data/db
#     networks:
#       - app-network

#   backend:
#     build: ./pocBackend
#     container_name: fastapi-backend
#     ports:
#       - 8000:8000
#     depends_on:
#       - mongo
#     environment:
#       - MONGO_URI=mongodb://mongo:27017
#     networks:
#       - app-network

#   frontend:
#     build: ./newPoc
#     container_name: frontend
#     ports:
#       - "8080:80"
#     depends_on:
#       - backend
#     networks:
#       - app-network

# volumes:
#   mongo_data: 

# networks:
#   app-network:
#     driver: bridge

# =====================================================================================

version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo-db
    # restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  backend1:
    build: ./pocBackend
    container_name: backend1
    ports:
      - "8000:8000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    networks:
      - app-network

  backend2:
    build: ./pocBackend
    container_name: backend2
    ports:
      - "8001:8000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    networks:
      - app-network

  backend3:
    build: ./pocBackend
    container_name: backend3
    ports:
      - "8002:8000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    networks:
      - app-network

  backend4:
    build: ./pocBackend
    container_name: backend4
    ports:
      - "8003:8000"
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    networks:
      - app-network

  frontend:
    build: ./newPoc
    container_name: frontend
    ports:
      - "4200:80"
    depends_on:
      - nginx
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-cache:/data/nginx/cache
    depends_on:
      - backend1
      - backend2
      - backend3
      - backend4
    networks:
      - app-network

volumes:
  mongo_data:


networks:
  app-network:
    driver: bridge
